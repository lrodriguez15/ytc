name: build

on:
  push:
    branches-ignore:
      - 'wip-*'
    paths-ignore:
      - 'README.md'

  pull_request:
    branches:
      - 'master'
  schedule:
    - cron: '0 12 * * *'

jobs:
  ci:

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        name:
          - ubuntu-18.04-gcc-7
          - ubuntu-18.04-clang-5.0
          - macOS-latest

        include:
          - name: ubuntu-18.04-gcc-7
            os: ubuntu-18.04
            compiler: gcc
            version: '7'
          - name: ubuntu-18.04-clang-5.0
            os: ubuntu-18.04
            compiler: clang
            version: '5.0'
          - name: macOS-latest
            os: macOS-latest
            compiler: xcode
            version: 'NOT USED'

    env:
      YTC_TESTS_ROOT: "${GITHUB_WORKSPACE}/tests"
      DEBIAN_FRONTEND: noninteractive

    steps:
      - uses: actions/checkout@v2-beta
        with:
          fetch-depth: 5

      - name: Setup Prerequisites (Linux, Generic)
        if: runner.os == 'Linux'
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test --yes
          sudo apt-get update --quiet --yes 1>/dev/null

          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            sudo apt-get install --no-install-recommends --quiet --yes \
              gcc-${{ matrix.version }}

            echo "::set-env name=CC::gcc-${{ matrix.version }}"
            echo "::set-env name=CXX::g++-${{ matrix.version }}"
          else
            sudo apt-get install --no-install-recommends --quiet --yes \
              clang-${{ matrix.version }}

            echo "::set-env name=CC::clang-${{ matrix.version }}"
            echo "::set-env name=CXX::clang++-${{ matrix.version }}"
          fi

      - name: Setup Prerequisites (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install pkg-config llvm

          sudo xcode-select -switch /Applications/Xcode.app

          echo "::set-env name=CC::clang"
          echo "::set-env name=CXX::clang++"
          echo "::set-env name=PATH::$PATH:$(brew --prefix llvm)/bin"

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          version: 3.8
          architecture: x64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure x64 Debug
        run: |
          $CC --version

          if [ "${{ runner.os }}" = "macOS" ]; then
            cmake                                  \
                -S .                               \
                -Bbuild/Debug                      \
                -DCMAKE_BUILD_TYPE=Debug
          else
            cmake                                  \
                -S .                               \
                -Bbuild/Debug                      \
                -DCMAKE_BUILD_TYPE=Debug
          fi

      - name: Build x64 Debug
        run: cmake --build build/Debug -j "$(getconf _NPROCESSORS_ONLN)"
